image: node

stages:
  - GreenHouse
  - SauceLabs

CreateTenant:
  stage: GreenHouse
  variables:
    GREENHOUSE_API_KEY: $GREENHOUSE_API_KEY
  script: >-
    curl -X POST 'https://greenhouse.tulipretail.com/greenhouse-engine/tenants'
    -H "X-API-KEY:$GREENHOUSE_API_KEY"
    -H "Content-Type: application/json"
    --data-raw '{
      "admin_console_user": {
        "email": "leandro.correa@tulip.com",
        "name": "Leandro Correa",
        "username": "leandro"
      },
      "app_user_data": {
        "assignRoles": [
          "Manager"
        ],
        "displayName": "Kim Kim",
        "emailAddress": "leandro.correa+kimqa@tulip.com",
        "externalId": "employee-kim",
        "firstName": "Kim",
        "lastName": "Kendrick",
        "password": "",
        "storeId": "tulipinc"
      },
      "blueprint": "tulip-product",
      "cluster": "gke-us-east1",
      "config_api_primer": {
        "products": [
          "Appointments",
          "AssistedSelling",
          "Clienteling",
          "LiveConnect"
        ]
      },
      "dal_primer_dataset": "sampleData",
      "environment": "dev",
      "name": "qa-tenant-auto-test",
      "owner": "Leandro_Correa",
      "pingdom_enable": false,
      "project_id": "tulip-develop",
      "region": "us-east1",
      "release": "rc",
      "team": "Patil_Demerji",
      "triggered_by": "Leandro_Correa"
    }'
  when: manual

ListTenants:
  stage: GreenHouse
  variables:
    GREENHOUSE_API_KEY: $GREENHOUSE_API_KEY
  script:
    - curl -H "X-API-KEY:$GREENHOUSE_API_KEY" https://greenhouse.tulipretail.com/greenhouse-engine/tenants
  when: manual

DeleteTenant:
  stage: GreenHouse
  variables:
    GREENHOUSE_API_KEY: $GREENHOUSE_API_KEY
  script: >-
    curl -X DELETE 'https://greenhouse.tulipretail.com/greenhouse-engine/projects/tulip-develop/clusters/gke-us-east1/tenants/qa-tenant-auto-test'
    -H "X-API-KEY:$GREENHOUSE_API_KEY"
  when: manual

Trigger dal-primer:
  stage: GreenHouse
  variables:
    GREENHOUSE_API_KEY: $GREENHOUSE_API_KEY
  script: >-
    curl -X PUT 'https://greenhouse.tulipretail.com/greenhouse-engine/projects/tulip-develop/clusters/gke-us-east1/tenants/qa-tenant-auto-test/workflow'
    -H "X-API-KEY:$GREENHOUSE_API_KEY"
    -H "Content-Type: application/json"
    --data-raw '{
      "dal_primer_dataset": "sampleData",
      "workflow": "dal_primer"
    }'
  when: manual

RunSauceClienteling:
  stage: SauceLabs
  variables:
    APP_STORAGE: "storage:filename=Clienteling.ipa"
    QRCODE: "0gpIJmXC_hw7w_KfoPnuWX-6Ah5-UZXG20WJtnVbeljIHb49uIErTbpwbEPpXrGOZBvZM6hE469YAh37GHfQxXmesen4ChWBecNeeDqUr39e42bX7IGubDxF1CWGCRrdaySr4PWzqzErtpWoYF9pAAYlA-C7zOfChHqYz58-RlX--rPtViBcI7uEAPeoe9-DaUHeyVfxPcDpk_UI8A5xBZ_P"
    BUNDLE_ID: "com.tulip.support.clienteling"
    DEVICE_NAME: "iPad.*"
    PLATFORM_VERSION: "15"
    TENANT: "tulip-develop-newrcqa"
    SAUCE_USERNAME: $SAUCE_USERNAME
    SAUCE_ACCESS_KEY: $SAUCE_ACCESS_KEY
  script:
    - npm install
    - npm run ios.sauce.us -- --cucumberOpts.tagExpression='@Clienteling'
  when: manual

RunSauceClienteling OnSchedule:
  stage: SauceLabs
  variables:
    APP_STORAGE: "storage:filename=Clienteling.ipa"
    QRCODE: "0gpIJmXC_hw7w_KfoPnuWX-6Ah5-UZXG20WJtnVbeljIHb49uIErTbpwbEPpXrGOZBvZM6hE469YAh37GHfQxXmesen4ChWBecNeeDqUr39e42bX7IGubDxF1CWGCRrdaySr4PWzqzErtpWoYF9pAAYlA-C7zOfChHqYz58-RlX--rPtViBcI7uEAPeoe9-DaUHeyVfxPcDpk_UI8A5xBZ_P"
    BUNDLE_ID: "com.tulip.support.clienteling"
    DEVICE_NAME: "iPad.*"
    PLATFORM_VERSION: "15"
    TENANT: "tulip-develop-newrcqa"
    SAUCE_USERNAME: $SAUCE_USERNAME
    SAUCE_ACCESS_KEY: $SAUCE_ACCESS_KEY
    MMHOOK: "https://mattermost.internal.tulip.io/hooks/975yi1ii17d38kkwakq89iexhe"
  only:
    refs:
      - schedules
    variables:
      - $SCHEDULE_TYPE == "CLIENTELING_SCHEDULE"
  script: 
    - npm install
    - npm run ios.sauce.us -- --cucumberOpts.tagExpression='@Clienteling'
    - MESSAGE="Clienteling Tests executed. See report in Saucelabs"
    - echo $MESSAGE
    - curl -X POST -H "Content-Type:application/json" -d "{\"text\":\"$MESSAGE\"}" $MMHOOK

  
RunSauceCheckout:
  stage: SauceLabs
  variables:
    APP_STORAGE: "storage:filename=Checkout.ipa"
    QRCODE: "0gpIJmXC_hw7w_KfoPnuWX-6Ah5-UZXG20WJtnVbeljIHb49uIErTbpwbEPpXrGOZBvZM6hE469YAh37GHfQxXmesen4ChWBecNeeDqUr39e42bX7IGubDxF1CWGCRrdaySr4PWzqzErtpWoYF9pAAYlA-C7zOfChHqYz58-RlX--rPtViBcI7uEAPeoe9-DaUHeyVfxPcDpk_UI8A5xBZ_P"
    BUNDLE_ID: "com.tulip.support.checkout"
    DEVICE_NAME: "iPad.*"
    PLATFORM_VERSION: "15"
    TENANT: "tulip-develop-newrcqa"
    SAUCE_USERNAME: $SAUCE_USERNAME
    SAUCE_ACCESS_KEY: $SAUCE_ACCESS_KEY
  script:
    - npm install
    - npm run ios.sauce.us -- --cucumberOpts.tagExpression='@Checkout'
  when: manual

RunSauceCheckout OnSchedule:
  stage: SauceLabs
  variables:
    APP_STORAGE: "storage:filename=Checkout.ipa"
    QRCODE: "0gpIJmXC_hw7w_KfoPnuWX-6Ah5-UZXG20WJtnVbeljIHb49uIErTbpwbEPpXrGOZBvZM6hE469YAh37GHfQxXmesen4ChWBecNeeDqUr39e42bX7IGubDxF1CWGCRrdaySr4PWzqzErtpWoYF9pAAYlA-C7zOfChHqYz58-RlX--rPtViBcI7uEAPeoe9-DaUHeyVfxPcDpk_UI8A5xBZ_P"
    BUNDLE_ID: "com.tulip.support.checkout"
    DEVICE_NAME: "iPad.*"
    PLATFORM_VERSION: "15"
    TENANT: "tulip-develop-newrcqa"
    SAUCE_USERNAME: $SAUCE_USERNAME
    SAUCE_ACCESS_KEY: $SAUCE_ACCESS_KEY
    MMHOOK: "https://mattermost.internal.tulip.io/hooks/975yi1ii17d38kkwakq89iexhe"
  only:
    refs:
      - schedules
    variables:
      - $SCHEDULE_TYPE == "CHECKOUT_SCHEDULE"

  script:
    - npm install
    - npm run ios.sauce.us -- --cucumberOpts.tagExpression='@Checkout'
    - MESSAGE="Checkout Tests executed. See report in Saucelabs"
    - echo $MESSAGE
    - curl -X POST -H "Content-Type:application/json" -d "{\"text\":\"$MESSAGE\"}" $MMHOOK

RunSauceAdminConsole:
  stage: SauceLabs
  variables:
    AC_URL: "https://tulip-develop-newrcqa.tulipretail.com/admin_console/"
    AC_USERNAME: $AC_USERNAME
    AC_PASSWORD: $AC_PASSWORD
    AC_AUTH_SECRET: $AC_AUTH_SECRET
    SAUCE_USERNAME: $SAUCE_USERNAME
    SAUCE_ACCESS_KEY: $SAUCE_ACCESS_KEY
  script:
    - npm install
    - npm run web.sauce.us
  when: manual

RunSatApiTests:
  image: gcr.io/tulip-infra/build
  stage: SauceLabs
  services:
    - docker:18-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOMAIN: "tulip-develop-newrcqa.tulipretail.com"
    DOMAIN_AUTH: "tulip-develop-auth-entrypoint.tulipretail.com"
    ENDPOINT_AUTH: "/auth-entrypoint/login"
    PROTOCOL: "https://"
    TENANT: "newrcqa"
    USER_CREDENTIALS: $USER_CREDENTIALS
    SAUCE_SATAPI_WEBHOOK: "01aa83e2-1d74-4b79-a507-5cf2753c5a05"
    SAUCE_USERNAME: $SAUCE_USERNAME
    SAUCE_ACCESS_KEY: $SAUCE_ACCESS_KEY
  script: >-
    docker run --pull always quay.io/saucelabs/apifctl run-all
    -H https://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@api.us-west-1.saucelabs.com/api-testing/rest/v4/$SAUCE_SATAPI_WEBHOOK
    -E domain=$DOMAIN,domain_auth=$DOMAIN_AUTH,endpoint_auth=$ENDPOINT_AUTH,protocol=$PROTOCOL,Base64Credentials=$USER_CREDENTIALS,tenant=$TENANT
  when: manual

RunSatApiTests OnSchedule:
  image: gcr.io/tulip-infra/build
  stage: SauceLabs
  services:
    - docker:18-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOMAIN: "tulip-develop-newrcqa.tulipretail.com"
    DOMAIN_AUTH: "tulip-develop-auth-entrypoint.tulipretail.com"
    ENDPOINT_AUTH: "/auth-entrypoint/login"
    PROTOCOL: "https://"
    TENANT: "newrcqa"
    USER_CREDENTIALS: $USER_CREDENTIALS
    SAUCE_SATAPI_WEBHOOK: "01aa83e2-1d74-4b79-a507-5cf2753c5a05"
    SAUCE_USERNAME: $SAUCE_USERNAME
    SAUCE_ACCESS_KEY: $SAUCE_ACCESS_KEY
    MMHOOK: "https://mattermost.internal.tulip.io/hooks/975yi1ii17d38kkwakq89iexhe"
  only:
    refs:
      - schedules
    variables:
      - $SCHEDULE_TYPE == "SATAPI_SCHEDULE"
  script:
    - >
      docker run --pull always quay.io/saucelabs/apifctl run-all
      -H https://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@api.us-west-1.saucelabs.com/api-testing/rest/v4/$SAUCE_SATAPI_WEBHOOK
      -E domain=$DOMAIN,domain_auth=$DOMAIN_AUTH,endpoint_auth=$ENDPOINT_AUTH,protocol=$PROTOCOL,Base64Credentials=$USER_CREDENTIALS,tenant=$TENANT

      RES=$(curl -s https://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@api.us-west-1.saucelabs.com/api-testing/rest/v4/$SAUCE_SATAPI_WEBHOOK/tests |
      jq -r 'map({complete: .complete, lastUpdate: .status.lastUpdate}) |
       [.[] | select(.complete == true)]')

      NUM_TESTS=$(echo $RES | jq -r 'length')
      MAX_DATE_TIMESTAMP=$(echo $RES | jq 'map({lastUpdate: (if .lastUpdate == null then (now - 3600 | todateiso8601) else .lastUpdate end)}) |
       sort_by(.lastUpdate | fromdate)[-1] |
       .lastUpdate' |
       jq -r "fromdateiso8601")

      timeout 90 sh -c "until curl -s https://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@api.us-west-1.saucelabs.com/api-testing/rest/v4/$SAUCE_SATAPI_WEBHOOK/tests |
      jq -r 'map({lastUpdate: (if .status.lastUpdate == null then (now - 3600 | todateiso8601) else .status.lastUpdate end)}) |
       [.[] | select((.lastUpdate | fromdate) >= $MAX_DATE_TIMESTAMP)] |
       length >= $NUM_TESTS' |
      grep -q 'true'; do sleep 2; echo 'Trying again...'; done" || true

      RESULT=$(curl https://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@api.us-west-1.saucelabs.com/api-testing/rest/v4/$SAUCE_SATAPI_WEBHOOK/tests |
      jq -r 'map({complete: .complete, success: .status.success}) |
       [.[] | select(.complete == true)] |
       group_by(.success) |
       map({success: .[0].success, Count: length}) |
       map({(if .success == true then "Passed" else "Failed" end): .Count}) |
       .[]')

      PASSED=$(echo $RESULT | jq '.Passed | select( . != null )')

      FAILED=$(echo $RESULT | jq '.Failed | select( . != null )')

      MESSAGE="SAT API Tests results: Passed: ${PASSED:=0} | Failed: ${FAILED:=0}"

      echo $MESSAGE

      curl -X POST -H "Content-Type:application/json" -d "{\"text\":\"$MESSAGE\"}" $MMHOOK
